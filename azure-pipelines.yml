# Build Pipeline for signing PowerPlatform.Formulas.Tools

trigger:
  - master

pr:
  - master

pool:
  vmImage: 'windows-latest'

variables:
  Codeql.Enabled: true
# - group: 'Nuget And PSGallery Publishing Data'

jobs:
- job: 'Build_PowerPlatform_Formulas_Tools'
  displayName: 'Build PowerPlatform.Formulas.Tools Solution'

  strategy:
    matrix:
      Debug:
        BuildConfiguration: 'Debug'
      Release:
        BuildConfiguration: 'Release'

  steps:
  - task: UseDotNet@2
    displayName: 'Use dotnet SDK 7.0'
    inputs:
      version: 7.0.x
      installationPath: '$(Agent.ToolsDirectory)/dotnet'

  - task: UseDotNet@2
    displayName: 'Use dotnet SDK 6.0'
    inputs:
      version: 6.0.x
      installationPath: '$(Agent.ToolsDirectory)/dotnet'

  - task: CodeQL3000Init@0

  - task: DotNetCoreCLI@2
    displayName: 'Build and test '
    inputs:
      command: 'run'
      projects: '$(Build.SourcesDirectory)/targets/targets.csproj'
      arguments: '-- ci -c $(BuildConfiguration)'

  - task: CodeQL3000Finalize@0

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'VSTest'
      testResultsFiles: '**/*-*.trx'
      searchFolder: '$(Build.SourcesDirectory)/obj/'
      mergeTestResults: true
      failTaskOnFailedTests: true

  - task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@3
    displayName: 'Sign assemblies'
    inputs:
      ConnectedServiceName: 'ESRPCodeSigningConnection'
      FolderPath: '$(Build.SourcesDirectory)/bin/$(BuildConfiguration)'
      Pattern: |
        /PAModel/Microsoft.PowerPlatform.Formulas.Tools.dll
        /Microsoft.PowerPlatform.PowerApps.Persistence/Microsoft.PowerPlatform.PowerApps.Persistence.dll
      UseMinimatch: true
      signConfigType: inlineSignParams
      inlineOperation: |
        [
            {
                  "keyCode": "CP-233863-SN",
                  "operationSetCode": "StrongNameSign",
                  "parameters": [ ],
                  "toolName": "sign",
                  "toolVersion": "1.0"
            },
            {
                "keyCode": "CP-230012",
                "operationSetCode": "SigntoolSign",
                "parameters": [
                {
                    "parameterName": "OpusName",
                    "parameterValue": "Microsoft"
                },
                {
                    "parameterName": "OpusInfo",
                    "parameterValue": "http://www.microsoft.com"
                },
                {
                    "parameterName": "Append",
                    "parameterValue": "/as"
                },
                {
                    "parameterName": "FileDigest",
                    "parameterValue": "/fd \"SHA256\""
                },
                {
                    "parameterName": "PageHash",
                    "parameterValue": "/NPH"
                },
                {
                    "parameterName": "TimeStamp",
                    "parameterValue": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
                }
                ],
                "toolName": "sign",
                "toolVersion": "1.0"
            }
        ]
      ServiceEndpointUrl: 'https://api.esrp.microsoft.com/api/v1'

  - task: DotNetCoreCLI@2
    displayName: 'Pack'
    inputs:
      command: 'run'
      projects: '$(Build.SourcesDirectory)/targets/targets.csproj'
      arguments: '-- pack -c $(BuildConfiguration)'

  - task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@3
    displayName: 'ESRP sign nuget packages'
    inputs:
      ConnectedServiceName: ESRPCodeSigningConnection
      FolderPath: '$(Build.SourcesDirectory)/pkg/PackResult'
      Pattern: '*.nupkg'
      signConfigType: inlineSignParams
      inlineOperation: |
        [
          {
            "keyCode": "CP-401405",
            "operationSetCode": "NuGetSign",
            "parameters": [],
            "toolName": "sign",
            "toolVersion": "1.0"
          },
          {
            "keyCode": "CP-401405",
            "operationSetCode": "NuGetVerify",
            "parameters": [],
            "toolName": "sign",
            "toolVersion": "1.0"
          }
        ]
      ServiceEndpointUrl: 'https://api.esrp.microsoft.com/api/v1'

  - task: AzureArtifacts.manifest-generator-task.manifest-generator-task.ManifestGeneratorTask@0
    displayName: 'PAModel Generation Task'
    inputs:
       BuildDropPath: '$(Build.SourcesDirectory)/bin/$(BuildConfiguration)/PAModel/'

  - task: AzureArtifacts.manifest-generator-task.manifest-generator-task.ManifestGeneratorTask@0
    displayName: 'Persistence Generation Task'
    inputs:
       BuildDropPath: '$(Build.SourcesDirectory)/bin/$(BuildConfiguration)/Microsoft.PowerPlatform.PowerApps.Persistence/'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.SourcesDirectory)/bin/$(BuildConfiguration)/PAModel/'
      ArtifactName: 'Generation Task'
      publishLocation: 'Container'
    condition: and(succeeded(), eq(variables['BuildConfiguration'], 'Release'))

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.SourcesDirectory)/bin/$(BuildConfiguration)/Microsoft.PowerPlatform.PowerApps.Persistence/'
      ArtifactName: 'Persistence Generation Task'
      publishLocation: 'Container'
    condition: and(succeeded(), eq(variables['BuildConfiguration'], 'Release'))

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.SourcesDirectory)/pkg/PackResult'
      ArtifactName: 'PowerPlatform.Formulas.Tools ($(BuildConfiguration))'
      publishLocation: 'Container'
    condition: and(succeeded(), eq(variables['BuildConfiguration'], 'Release'))

  - task: tagBuildOrRelease@0
    inputs:
      type: 'Build'
      tags: 'deployable'
    condition: eq(variables['PublicRelease'], 'true')
